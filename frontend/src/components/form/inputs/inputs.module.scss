.default {
  display: grid;
  gap: 0 1rem;
  justify-items: stretch;
  align-items: center;
  transition: 300ms;
  width: 100%;

  ion-note {
    grid-column: 1 / -1;
  }

  &.inline {
    grid-template-columns: 1fr auto;
  }

  .label {
    font-weight: 300;
    padding-left: 0.5rem;
    margin: 0;

    &.required {
      font-weight: 700;
    }
  }

  .input {
    display: grid;
    transition: 300ms;
    position: relative;

    textarea, input {
      border-radius: 0.5rem;
      border: none;
      background: var(--ion-color-light-shade);
      padding: 0.5rem 1rem;
      outline-color: var(--ion-color-primary);
      accent-color: var(--ion-color-primary);

      &.hasStartIcon {
        padding-left: 3rem;
      }

      &.hasEndIcon {
        padding-right: 3rem;
      }
    }

    /* Range specific */
    input[type=range] {
      /* Other inputs have a padding: 0.5rem 1rem; rule
        but it does not work well with ranges on Chrome */
      padding: 0.5rem 0;
      margin-right: 0.5rem;
    }

    .startIcon, .endIcon {
      position: absolute;
      font-size: 1rem;
      top: 50%;
      transform: translateY(-50%);
      color: var(--ion-color-medium);
      --ionicon-stroke-width: 3rem;
    }

    .startIcon {
      left: 1rem;
      pointer-events: none;
    }

    .endIcon {
      right: 1rem;
      cursor: pointer;
    }
  }

  &[aria-invalid=true] {
    textarea, input {
      box-shadow: inset 0 0 0 0.1rem var(--ion-color-danger);
    }
  }
}

.realInput {
  position: absolute;
  z-index: -1;
  pointer-events: none;
  opacity: 0;
}

.select {
  width: fit-content;

  &.hasLabel {
    grid-template-columns: 1fr auto;
    justify-content: space-between;
    width: unset;

    &.loading {
      grid-template-columns: 1fr auto auto;
    }
  }

  .input {
    button {
      background-color: var(--ion-color-light-shade);
      padding: 0.5rem 1rem;
      border-radius: 1rem;
      display: grid;
      grid-auto-flow: column;
      align-items: center;
      gap: 0.5rem;
      width: fit-content;
      transition: 300ms;
      cursor: pointer;
      border: none;
      outline-color: var(--ion-color-primary);
      accent-color: var(--ion-color-primary);

      p {
        white-space: nowrap;
        text-overflow: ellipsis;
        max-width: 100%;
        overflow: hidden;
      }

      &.placeholder, ion-icon {
        color: rgba(var(--ion-color-dark-rgb), 0.6);
      }

      ion-icon {
        font-size: 1rem;
      }
    }

    &.open {
      button {
        box-shadow: var(--aplose-box-shadow);
      }
    }
  }

  &[aria-disabled=true] button {
    cursor: default;
  }

  &[aria-invalid=true] button {
    box-shadow: inset 0 0 0 0.1rem var(--ion-color-danger);
  }

  .inner {
    grid-column: 1 / 3;
    padding: 0 2rem;
  }
}

.options {
  cursor: pointer;
  position: absolute;
  background-color: var(--ion-color-light-shade);
  box-shadow: var(--aplose-box-shadow);
  border-radius: 1rem;
  overflow: hidden;
  z-index: 10;

  .item {
    padding: 0.5rem 2.5rem 0.5rem 1rem;
    max-width: 20rem;
    overflow: hidden;
    text-overflow: ellipsis;
    display: flex;
    gap: 1rem;
  }
}

.selectAlert {
  grid-template-rows: auto auto 1fr auto;
  align-items: start;
  height: 80%;

  .radioGroup {
    overflow-y: auto !important;
    height: 100%;
    justify-items: start;
    align-content: start;
    gap: 1rem;
  }
}

.switch {

  &.hasLabel {
    grid-template-columns: 1fr auto;
  }

  .switchContainer {
    display: grid;
    align-items: center;
    justify-items: center;
    background-color: var(--ion-color-light-shade);
    border-radius: 0.5rem;
    position: relative;

    .switchItem {
      color: var(--ion-color-dark-tint);
      padding: 0.25rem 1rem;
      z-index: 2;
      cursor: pointer;
      user-select: none;

      &.selected {
        color: var(--ion-color-primary);
      }
    }

    .switchSelect {
      height: 100%;
      position: absolute;
      background-color: rgba(var(--ion-color-primary-rgb), 0.1);
      border: 1px solid var(--ion-color-primary);
      border-radius: 0.5rem;
      z-index: 1;
      transition: 0.3s ease-in-out;
    }
  }

  &[aria-disabled=true] .switchItem {
    cursor: default;
  }

  ion-note {
    grid-column: 1 / -1;
  }
}

.chips {
  .input {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  &[aria-invalid=true] ion-chip {
    box-shadow: inset 0 0 0 0.1rem var(--ion-color-danger);
  }
}