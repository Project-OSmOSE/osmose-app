{
  "name": "osmose",
  "version": "2.4.2",
  "scripts": {
    "database:remove": "docker stop devdb && docker rm devdb",
    "database:create": "docker run --name osmose_dev_db -e POSTGRES_PASSWORD=postgres -p 127.0.0.1:5432:5432 -d postgis/postgis",
    "database:run": "docker start devdb",
    "server:migrate": "python -m poetry run python manage.py migrate",
    "server:makemigrations": "python -m poetry run python manage.py makemigrations && cd backend/api/migrations && git add . && cd ../../osmosewebsite/migrations && git add .",
    "server:migrate & seed": "npm run server:migrate && npm run server:seed",
    "server:seed": "python -m poetry run python manage.py seed",
    "server:run": "python -m poetry run python manage.py runserver 8000",
    "server:test": "python -m poetry run python manage.py test",
    "server:format": "python -m poetry run black backend",
    "server:lint": "python -m poetry run pylint backend --ignore migrations",
    "preaplose:test": "npm run server:migrate && npm run server:seed",
    "aplose:test": "cd frontend && npx cypress open",
    "aplose:run": "cd frontend && npm run dev",
    "osmose:run": "cd website && npm run start",
    "reset data": "npm run database:remove && npm run database:create && npm run server:migrate && npm run server:seed",
    "launch": "concurrently --kill-others-on-fail \"npm run database:run && npm run server:migrate && npm run server:run\" \"npm run aplose:run\" \"npm run osmose:run\"",
    "beforeCommit": "npm run \"server:makemigrations\" && npm run \"server:format\" && npm run \"server:lint\"",
    "grapqhl:generate-schema": "python -m poetry run python ./manage.py graphql_schema --schema backend.schema.schema --out frontend/schema.graphql",
    "grapqhl:watch-generate-schema": "python -m poetry run python ./manage.py graphql_schema --schema backend.schema.schema --out frontend/schema.graphql --watch"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  }
}
