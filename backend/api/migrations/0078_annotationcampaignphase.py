# Generated by Django 3.2.25 on 2025-04-22 07:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models
from django.db.models import Q


def create_phases(apps, schema_editor):
    phase_model = apps.get_model("api", "AnnotationCampaignPhase")
    campaign_model = apps.get_model("api", "AnnotationCampaign")
    user_model = apps.get_model("auth", "User")

    migration_user, _ = user_model.objects.get_or_create(username="[Migration]")

    for campaign in campaign_model.objects.all():
        phase = phase_model.objects.create(
            annotation_campaign=campaign,
            phase="A",  # Annotation
            created_by=migration_user,
        )
        campaign.annotation_file_ranges.update(annotation_campaign_phase=phase)
        campaign.tasks.update(annotation_campaign_phase=phase)
        campaign.results.update(annotation_campaign_phase=phase)
        campaign.comments.update(annotation_campaign_phase=phase)
        if campaign.usage == 1:  # Check
            phase_model.objects.create(
                annotation_campaign=campaign,
                phase="V",  # Verification
                created_by=migration_user,
            )


def reverse_create_phases(apps, schema_editor):
    campaign_model = apps.get_model("api", "AnnotationCampaign")
    file_range_model = apps.get_model("api", "AnnotationFileRange")
    task_model = apps.get_model("api", "AnnotationTask")
    result_model = apps.get_model("api", "AnnotationResult")
    comment_model = apps.get_model("api", "AnnotationComment")

    for campaign in campaign_model.objects.all():
        if campaign.phases.filter(phase="V").exists():
            campaign.usage = 1
        else:
            campaign.usage = 0
        campaign.save()
        filter = Q(annotation_campaign_phase__in=campaign.phases.all())
        file_range_model.objects.filter(filter).update(annotation_campaign=campaign)
        task_model.objects.filter(filter).update(annotation_campaign=campaign)
        result_model.objects.filter(filter).update(annotation_campaign=campaign)
        comment_model.objects.filter(filter).update(annotation_campaign=campaign)


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("api", "0077_annotationresult_updated_to"),
    ]

    operations = [
        migrations.CreateModel(
            name="AnnotationCampaignPhase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phase",
                    models.CharField(
                        max_length=1,
                        choices=[("A", "Annotation"), ("V", "Verification")],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
                (
                    "annotation_campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phases",
                        to="api.annotationcampaign",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_phases",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ended_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ended_phases",
                        to=settings.AUTH_USER_MODEL,
                        blank=True,
                        null=True,
                    ),
                ),
            ],
            options={
                "unique_together": {("phase", "annotation_campaign")},
            },
        ),
        # Add "nullable" for annotation_campaign fields
        migrations.AlterField(
            model_name="annotationcomment",
            name="annotation_campaign",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="api.annotationcampaign",
                null=True,
                blank=True,
            ),
        ),
        migrations.AlterField(
            model_name="annotationfilerange",
            name="annotation_campaign",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="annotation_file_ranges",
                to="api.annotationcampaign",
                null=True,
                blank=True,
            ),
        ),
        migrations.AlterField(
            model_name="annotationresult",
            name="annotation_campaign",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="results",
                to="api.annotationcampaign",
                null=True,
                blank=True,
            ),
        ),
        migrations.AlterField(
            model_name="annotationtask",
            name="annotation_campaign",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tasks",
                to="api.annotationcampaign",
                null=True,
                blank=True,
            ),
        ),
        # Add phase relation in file range, task, result and comments
        migrations.AddField(
            model_name="annotationcomment",
            name="annotation_campaign_phase",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="api.annotationcampaignphase",
            ),
        ),
        migrations.AddField(
            model_name="annotationfilerange",
            name="annotation_campaign_phase",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="file_ranges",
                to="api.annotationcampaignphase",
            ),
        ),
        migrations.AddField(
            model_name="annotationresult",
            name="annotation_campaign_phase",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="results",
                to="api.annotationcampaignphase",
            ),
        ),
        migrations.AddField(
            model_name="annotationtask",
            name="annotation_campaign_phase",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tasks",
                to="api.annotationcampaignphase",
            ),
        ),
        # Migrate annotation_campaign -> annotation_campaign_phase
        migrations.RunPython(create_phases, reverse_create_phases),
        # Remove "nullable" of annotation_campaign_phase fields
        migrations.AlterField(
            model_name="annotationcomment",
            name="annotation_campaign_phase",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="api.annotationcampaignphase",
            ),
        ),
        migrations.AlterField(
            model_name="annotationfilerange",
            name="annotation_campaign_phase",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="file_ranges",
                to="api.annotationcampaignphase",
            ),
        ),
        migrations.AlterField(
            model_name="annotationresult",
            name="annotation_campaign_phase",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="results",
                to="api.annotationcampaignphase",
            ),
        ),
        migrations.AlterField(
            model_name="annotationtask",
            name="annotation_campaign_phase",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tasks",
                to="api.annotationcampaignphase",
            ),
        ),
        # Remove annotation_campaign fields
        migrations.RemoveField(
            model_name="annotationcomment", name="annotation_campaign"
        ),
        migrations.RemoveField(
            model_name="annotationfilerange", name="annotation_campaign"
        ),
        migrations.RemoveField(
            model_name="annotationresult", name="annotation_campaign"
        ),
        migrations.AlterUniqueTogether(
            name="annotationtask",
            unique_together={
                ("dataset_file", "annotation_campaign_phase", "annotator")
            },
        ),
        migrations.RemoveField(model_name="annotationtask", name="annotation_campaign"),
        # Clean
        migrations.RemoveField(model_name="annotationcampaign", name="usage"),
        migrations.RemoveField(
            model_name="annotationcampaign",
            name="annotators",
        ),
    ]
