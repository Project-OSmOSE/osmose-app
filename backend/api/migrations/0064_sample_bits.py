# Generated by Django 3.2.25 on 2024-11-18 10:14
import re

from django.db import migrations, models


def migrate_sample_bits(apps, schema_editor):
    file_subtype = apps.get_model("api", "FileSubtype")
    audio_metadatum = apps.get_model("api", "AudioMetadatum")
    for meta in audio_metadatum.objects.all():
        subtype, _ = file_subtype.objects.get_or_create(name=str(meta.sample_bits))
        meta.files_subtypes.add(subtype)


def migrate_files_subtype(apps, schema_editor):
    audio_metadatum = apps.get_model("api", "AudioMetadatum")
    for meta in audio_metadatum.objects.all():
        if meta.files_subtypes.count() < 1:
            continue
        first_subtype = meta.files_subtypes.first().name
        sample_bit = re.findall(r"\d+", first_subtype)[0]
        meta.sample_bits = sample_bit


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0063_annotationcampaign_annotators"),
    ]

    operations = [
        migrations.CreateModel(
            name="FileSubtype",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name="audiometadatum",
            name="files_subtypes",
            field=models.ManyToManyField(to="api.FileSubtype"),
        ),
        migrations.RunPython(migrate_sample_bits, migrate_files_subtype),
        migrations.RemoveField(
            model_name="audiometadatum",
            name="sample_bits",
        ),
    ]
