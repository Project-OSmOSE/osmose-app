# Generated by Django 3.2.25 on 2025-05-28 09:50

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("osmosewebsite", "0027_update_team_member"),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Bibliography",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "doi",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "publication_status",
                    models.CharField(
                        choices=[
                            ("D", "Draft"),
                            ("R", "In Review"),
                            ("P", "Published"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "publication_date",
                    models.DateField(
                        blank=True,
                        help_text="Required for any published bibliography",
                        null=True,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("S", "Software"),
                            ("A", "Article"),
                            ("C", "Conference"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "journal",
                    models.CharField(
                        blank=True,
                        help_text="Required for an article",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("volumes", models.CharField(blank=True, max_length=255, null=True)),
                ("pages_from", models.PositiveIntegerField(blank=True, null=True)),
                ("pages_to", models.PositiveIntegerField(blank=True, null=True)),
                ("issue_nb", models.PositiveIntegerField(blank=True, null=True)),
                ("article_nb", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "publication_place",
                    models.CharField(
                        blank=True,
                        help_text="Required for a software",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("repository_url", models.URLField(blank=True, null=True)),
                (
                    "conference",
                    models.CharField(
                        blank=True,
                        help_text="Required for a conference",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "conference_location",
                    models.CharField(
                        blank=True,
                        help_text="Required for a conference (format: {City}, {Country})",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Bibliography",
            },
        ),
        migrations.AddConstraint(
            model_name="bibliography",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("publication_date__isnull", False), ("publication_status", "P")
                    ),
                    models.Q(("publication_status", "P"), _negated=True),
                    _connector="OR",
                ),
                name="Published publication has a publication date",
            ),
        ),
        migrations.AddConstraint(
            model_name="bibliography",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("type", "A"), _negated=True),
                    models.Q(("journal__isnull", False), ("type", "A")),
                    _connector="OR",
                ),
                name="Article has required fields",
            ),
        ),
        migrations.AddConstraint(
            model_name="bibliography",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("type", "S"), _negated=True),
                    models.Q(("publication_place__isnull", False), ("type", "S")),
                    _connector="OR",
                ),
                name="Software has required fields",
            ),
        ),
        migrations.AddConstraint(
            model_name="bibliography",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("type", "C"), _negated=True),
                    models.Q(
                        ("conference__isnull", False),
                        ("conference_location__isnull", False),
                        ("type", "C"),
                    ),
                    _connector="OR",
                ),
                name="Conference has required fields",
            ),
        ),
        migrations.AddField(
            model_name="author",
            name="bibliography",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="authors",
                to="osmosewebsite.bibliography",
            ),
        ),
        migrations.AddField(
            model_name="author",
            name="scientist",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="authors",
                to="osmosewebsite.scientist",
            ),
        ),
        migrations.AddField(
            model_name="author",
            name="institutions",
            field=models.ManyToManyField(
                related_name="bibliography_authors",
                to="osmosewebsite.Institution",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="author",
            unique_together={("order", "bibliography")},
        ),
    ]
